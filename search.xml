<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue简单语法</title>
      <link href="/2023/05/24/vue%E7%AE%80%E5%8D%95%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/05/24/vue%E7%AE%80%E5%8D%95%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE插值表达式"><a href="#VUE插值表达式" class="headerlink" title="VUE插值表达式"></a>VUE插值表达式</h1><h2 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h2><p>vue可以通过data提供数据，注意：data必须是一个函数，并且返回一个对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      money: 100,</span><br><span class="line">      msg: &#x27;hello&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;    </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="通过插值表达式显示数据"><a href="#通过插值表达式显示数据" class="headerlink" title="通过插值表达式显示数据"></a>通过插值表达式显示数据</h2><p>插值表达式：小胡子语法 &lt;!–swig￼26–&gt;</p><blockquote><p>&lt;!–swig￼27–&gt;</p></blockquote><ol><li><p>使用 data 中的数据渲染视图（模板）</p></li><li><p>基本语法，支持简单数据处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\&#123;&#123; msg &#125;&#125;</span><br><span class="line">\&#123;&#123; obj.<span class="property">name</span> &#125;&#125;</span><br><span class="line">\&#123;&#123; msg.<span class="title function_">toUpperCase</span>() &#125;&#125;</span><br><span class="line">\&#123;&#123; obj.<span class="property">age</span> &gt; <span class="number">18</span> ? <span class="string">&#x27;成年&#x27;</span> : <span class="string">&#x27;未成年&#x27;</span> &#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>vue中插值表达式的注意点 </p><ol><li>使用的数据在 data 中要存在</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>\&#123;&#123; gaga &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>能使用表达式, 但是不能使用 if  for</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>\&#123;&#123; if (obj.age &gt; 18 ) &#123; &#125;  &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>不能在标签属性中使用</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">title</span>=<span class="string">&quot;\&#123;&#123; msg &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="VUE指令"><a href="#VUE指令" class="headerlink" title="VUE指令"></a>VUE指令</h1><blockquote><p>vue指令, 实质上就是特殊的 html 标签属性, 特点:  v- 开头</p><p>每个 v- 开头的指令, 都有着自己独立的功能, 将来vue解析时, 会根据不同的指令提供不同的功能</p></blockquote><h2 id="v-bind指令"><a href="#v-bind指令" class="headerlink" title="v-bind指令"></a>v-bind指令</h2><ul><li>描述：插值表达式不能用在html的属性上，如果想要动态的设置html元素的属性，需要使用v-bind指令</li><li>作用：动态的设置html的属性</li><li>语法：v-bind:标签内的属性名&#x3D;”变量名”</li><li>简写：:title&#x3D;”msg”</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 完整语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on指令"><a href="#v-on指令" class="headerlink" title="v-on指令"></a>v-on指令</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>​1.v-on:事件名&#x3D;“要执行的少量代码”</p><p>​2.v-on:事件名&#x3D;“methods中的函数名”</p><p>​3.v-on:事件名&#x3D;“methods中的函数名(实参)” </p><p>####基本结构</p><p>&lt;button v-on:事件名&#x3D;”事件函数”&gt;按钮</button>，需要在methods中提供事件处理函数</p><blockquote><p>methods用于存放函数方法</p><p>this是指当前的组件</p><p>简写：@事件名&#x3D;”事件函数”  v-on:可以简写成@</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-<span class="attr">on</span>:click=<span class="string">&quot;fn&quot;</span>&gt;搬砖&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;fn1&quot;</span>&gt;</span>卖房<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供方法</span></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    fn () &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好啊&#x27;</span>)</span><br><span class="line">      <span class="comment">// console.log(this)</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">money</span>++</span><br><span class="line">    &#125;,</span><br><span class="line">    fn1 () &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">money</span> += <span class="number">10000</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><p>&lt;button v-on:事件名&#x3D;”事件函数(参数)”&gt;按钮</button>，需要在methods中提供事件函数，接受参数</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-<span class="attr">on</span>:click=<span class="string">&quot;addMoney(1)&quot;</span>&gt;搬砖&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addMoney(10000)&quot;</span>&gt;</span>卖房<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  addMoney (money) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">money</span> += money</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果事件的逻辑足够简单，可以不提供函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;money++&quot;&gt;搬砖&lt;/button&gt;</span><br><span class="line">&lt;button v-on:click=&quot;money += 10000&quot;&gt;卖房&lt;/button&gt;</span><br></pre></td></tr></table></figure><h3 id="vue中获取事件对象-了解"><a href="#vue中获取事件对象-了解" class="headerlink" title="vue中获取事件对象(了解)"></a>vue中获取事件对象(了解)</h3><p>需求：默认a标签点击会跳走,  希望阻止默认的跳转, 阻止默认行为  e.preventDefault()</p><h4 id="vue中获取事件对象"><a href="#vue中获取事件对象" class="headerlink" title="vue中获取事件对象"></a>vue中获取事件对象</h4><ol><li>没有传参, 通过形参接收 e</li><li>传参了, 通过$event指代事件对象 e</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;fn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;fn2(100, $event)&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>去百度2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">fn</span>(<span class="params">e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      e.<span class="title function_">preventDefault</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">fn2</span>(<span class="params">num, e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      e.<span class="title function_">preventDefault</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>插值表达式：标签行外数据绑定</p><p>v-bind：标签行内属性绑定</p><p>v-on：标签事件绑定</p></blockquote><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><h3 id="v-on-事件修饰符"><a href="#v-on-事件修饰符" class="headerlink" title="v-on 事件修饰符"></a>v-on 事件修饰符</h3><p>vue中提供的事件修饰符</p><ul><li>.prevent 阻止默认行为</li><li>.stop 阻止冒泡</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;a @click.prevent=&quot;fn&quot; href=&quot;http://www.baidu.com&quot;&gt;去百度&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><p>需求: 用户输入内容, 回车, 打印输入的内容</p><p>在监听键盘事件时，我们经常需要判断详细的按键。此时，可以为键盘相关的事件添加按键修饰符</p><ul><li>@keyup.enter  回车</li><li>@keyup.esc 返回</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; @keyup=&quot;fn&quot;&gt; &lt;hr&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; @keyup.enter=&quot;fn2&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="v-if-和-v-show-指令"><a href="#v-if-和-v-show-指令" class="headerlink" title="v-if 和 v-show 指令"></a>v-if 和 v-show 指令</h2><h3 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h3><p>v-show 和 v-if 功能: 控制盒子的显示隐藏</p><ol><li><p>v-show</p><p>语法：v-show&#x3D;”布尔值”  (true显示，false隐藏)</p><p>原理：实质是在控制元素的 css 样式, display: none;</p></li><li><p>v-if</p><p>语法: v-if&#x3D;”布尔值” (true显示, false隐藏)</p><p>原理:  实质是在动态的创建 或者 删除元素节点</p></li></ol><p>应用场景: </p><ul><li><p>如果是频繁的切换显示隐藏, 用 v-show</p><p>v-if, 频繁切换会大量的创建和删除元素, 消耗性能</p></li><li><p>如果是不用频繁切换, 要么显示, 要么隐藏的情况, 适合于用 v-if</p><p>v-if 是惰性的, 如果初始值为 false, 那么这些元素就直接不创建了, 节省一些初始渲染开销</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1 v-show=&quot;isShow&quot;&gt;v-show盒子-\&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;h1 v-if=&quot;isShow&quot;&gt;v-if盒子-\&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="v-if-v-else-和-v-else-if"><a href="#v-if-v-else-和-v-else-if" class="headerlink" title="v-if v-else 和 v-else-if"></a>v-if v-else 和 v-else-if</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;h1 v-if=&quot;isLogin&quot;&gt;尊敬的超级vip, 你好&lt;/h1&gt;</span><br><span class="line">  &lt;h1 v-else&gt;你谁呀, 赶紧登陆~&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;h1 v-if=&quot;age &gt;= 60&quot;&gt;60岁以上, 广场舞&lt;/h1&gt;</span><br><span class="line">  &lt;h1 v-else-if=&quot;age &gt;= 30&quot;&gt;30岁以上, 搓麻将&lt;/h1&gt;</span><br><span class="line">  &lt;h1 v-else-if=&quot;age &gt;= 20&quot;&gt;20岁以上, 蹦迪&lt;/h1&gt;</span><br><span class="line">  &lt;h1 v-else&gt;20岁以下, 唱跳rap篮球&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>指令可以配套！标签不用配套！</p></blockquote><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>作用：给表单元素使用, 双向数据绑定</p><ol><li>数据变化了, 视图会跟着变</li><li>视图变化了, 数据要跟着变<ul><li>输入框内容变化了(监听用户的输入, 监听input事件), 数据要跟着变</li></ul></li></ol><p>语法：v-model&#x3D;’值’</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-model-处理其他表单元素"><a href="#v-model-处理其他表单元素" class="headerlink" title="v-model 处理其他表单元素"></a>v-model 处理其他表单元素</h3><p>数据双向绑定，双向更新，不写的话，就单项变化</p><ul><li><p>select</p></li><li><p>checkbox</p></li><li><p>textarea</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;checkbox&quot; v-model=&quot;key&quot;&gt;</span><br><span class="line">&lt;textarea v-model=&quot;msg&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;select v-model=&quot;num&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;1&quot;&gt;山东&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;2&quot;&gt;上海&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;3&quot;&gt;山东商务&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                msg:&#x27;这是txt&#x27;,</span><br><span class="line">                key:true,</span><br><span class="line">                num:3</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><p>注意：v-model 会忽略掉表单元素原本的value, checked等初始值</p><h3 id="v-model-修饰符"><a href="#v-model-修饰符" class="headerlink" title="v-model 修饰符"></a>v-model 修饰符</h3><ul><li><p>number</p><p>如果想自动将用户的输入值, 用parseFloat转成数字类型, ，可以给 v-model 添加 number 修饰符：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>trim</p><p>如果要自动过滤用户输入的首尾空白字符，可以给 v-model 添加 trim 修饰符：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>lazy</p><p>在change时而非input时更新，可以给 v-model 添加 lazy 修饰符：</p><p>（用户离开输入框时才触发更新操作，而不是用户每输入一个字符就进行一次更新）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="v-text-和-v-html"><a href="#v-text-和-v-html" class="headerlink" title="v-text 和 v-html"></a>v-text 和 v-html</h2><h3 id="v-text指令"><a href="#v-text指令" class="headerlink" title="v-text指令"></a>v-text指令</h3><ul><li><p>解释：更新元素的 textContent&#x2F;innerText。如果要更新部分的 textContent ，需要使用 &lt;!–swig￼28–&gt; 插值。 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 v-text=<span class="string">&quot;msg&quot;</span>&gt;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>:<span class="string">&#x27;&lt;button&gt;这是按钮&lt;/button&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="v-html指令"><a href="#v-html指令" class="headerlink" title="v-html指令"></a>v-html指令</h3><ul><li><p>解释：更新DOM对象的 innerHTML,html标签会生效</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 v-html=<span class="string">&quot;msg&quot;</span>&gt;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>:<span class="string">&#x27;&lt;button&gt;这是按钮&lt;/button&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。</strong> </p><p><strong>只在可信内容上使用v-html，永不用在用户提交的内容上。</strong> </p></blockquote><h2 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h2><h3 id="基本使用-2"><a href="#基本使用-2" class="headerlink" title="基本使用"></a>基本使用</h3><p>v-for 作用: 遍历对象和数组</p><ol><li>遍历数组（常用）</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v-<span class="keyword">for</span>=<span class="string">&quot;item in 数组名&quot;</span>  item每一项</span><br><span class="line">v-<span class="keyword">for</span>=<span class="string">&quot;(item, index) in 数组名&quot;</span>  item每一项 index下标</span><br><span class="line"></span><br><span class="line">注意：item和index不是定死的，可以是任意的名字，但是需要注意 第一项是值  第二项是下标</span><br></pre></td></tr></table></figure><ol start="2"><li>遍历对象 (一般不用)</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">  v-<span class="keyword">for</span>也可以遍历对象（不常用）</span><br><span class="line">  v-<span class="keyword">for</span>=<span class="string">&quot;(值, 键) in 对象&quot;</span></span><br><span class="line">--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in user&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;value&quot;</span>&gt;</span>\&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key) in user&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span>\&#123;&#123;value&#125;&#125; ---\&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>遍历数字</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">  遍历数字</span><br><span class="line">  语法： v-<span class="keyword">for</span>=<span class="string">&quot;(item, index) in 数字&quot;</span></span><br><span class="line">  作用：遍历具体的次数 item从<span class="number">1</span>开始  index下标从<span class="number">0</span>开始的</span><br><span class="line">--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in 10&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span>\&#123;&#123;item&#125;&#125; ---\&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="v-for-的key的说明"><a href="#v-for-的key的说明" class="headerlink" title="v-for 的key的说明"></a>v-for 的key的说明</h3><ol><li>设置 和 不设置 key 有什么区别？<ul><li>不设置 key， 默认同级兄弟元素按照下标进行比较。</li><li>设置了key，按照相同key的新旧元素比较。</li></ul></li><li>key值要求是?<ul><li>字符串或者数值，唯一不重复</li><li>有 id 用 id,  有唯一值用唯一值，实在都没有，才用索引</li></ul></li><li>key的好处?<ul><li>key的作用：提高虚拟DOM的对比复用性能</li></ul></li></ol><p>以后：只要是写到列表渲染，都推荐加上 key 属性。且 key 推荐是设置成 id， 实在没有，就设置成 index</p><blockquote><p>注意：key是用来虚拟dom比较，而不是排序 （diff算法）</p></blockquote><h2 id="v-computed-计算属性"><a href="#v-computed-计算属性" class="headerlink" title="v-computed 计算属性"></a>v-computed 计算属性</h2><h3 id="基本使用-3"><a href="#基本使用-3" class="headerlink" title="基本使用"></a>基本使用</h3><blockquote><p>计算属性是一个属性，写法上是一个函数，这个函数的返回值就是计算属性最终的值。</p></blockquote><ol><li>计算属性必须定义在computed节点中</li><li>计算属性必须是一个function,计算属性必须有返回值</li><li>计算属性不能被当作方法调用,当成属性来用</li></ol><h3 id="定义计算属性"><a href="#定义计算属性" class="headerlink" title="定义计算属性"></a>定义计算属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件的数据： 需要计算的属性</span></span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  reverseMsg () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">msg</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用计算属性"><a href="#使用计算属性" class="headerlink" title="使用计算属性"></a>使用计算属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>\&#123;&#123; reverseMsg &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初始vue</title>
      <link href="/2023/05/24/%E5%88%9D%E5%A7%8Bvue/"/>
      <url>/2023/05/24/%E5%88%9D%E5%A7%8Bvue/</url>
      
        <content type="html"><![CDATA[<h1 id="初始vue"><a href="#初始vue" class="headerlink" title="初始vue"></a>初始vue</h1><h2 id="开发vue的方式"><a href="#开发vue的方式" class="headerlink" title="开发vue的方式"></a>开发vue的方式</h2><p>开发vue有两种方式</p><ul><li>传统开发模式：基于html&#x2F;css&#x2F;js文件开发vue </li><li>工程化开发方式：在webpack环境中开发vue，这是最推荐的方式。</li></ul><h2 id="vue-cli的使用"><a href="#vue-cli的使用" class="headerlink" title="vue-cli的使用"></a>vue-cli的使用</h2><h3 id="webpack基本使用"><a href="#webpack基本使用" class="headerlink" title="webpack基本使用"></a>webpack基本使用</h3><ul><li>初始化一个vue项目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名(不能用中文)</span><br></pre></td></tr></table></figure><ul><li>启动项目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><ul><li>访问项目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">浏览器访问  </span><br><span class="line">http://localhost:<span class="variable">$&#123;端口号&#125;</span>/</span><br><span class="line">http://127.0.0.1:<span class="variable">$&#123;端口号&#125;</span>/</span><br><span class="line">http://<span class="variable">$&#123;本地ip&#125;</span>:<span class="variable">$&#123;端口号&#125;</span>/</span><br></pre></td></tr></table></figure><h2 id="目录分析"><a href="#目录分析" class="headerlink" title="目录分析"></a>目录分析</h2><h3 id="重要介绍"><a href="#重要介绍" class="headerlink" title="重要介绍"></a>重要介绍</h3><ul><li><p>public&#x2F;index.html不用动，提供一个最基础的页面</p></li><li><p>src&#x2F;main.js不用动，  渲染了App.vue组件</p></li><li><p>src&#x2F;App.vue默认有很多的内容，可以全部删除</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>assets文件夹与components直接删除</p></li></ul><h2 id="修改端口号"><a href="#修改端口号" class="headerlink" title="修改端口号"></a>修改端口号</h2><p>如果需要覆盖webpack的配置，可以修改vue.config.js文件，覆盖webpack配置文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vue/cli-service&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 配置端口号</span></span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">3000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="vue单文件组件的说明"><a href="#vue单文件组件的说明" class="headerlink" title="vue单文件组件的说明"></a>vue单文件组件的说明</h2><p>一个<code>.vue</code>文件就是一个组件，后续开发vue，所有的功能都是基于组件实现。</p><p>根组件为<code>app.vue</code></p><p>一个单文件组件由三部分构成</p><ul><li>template(必须)  影响组件渲染的结构  html  （只能有一个根元素,就是最外层只能有一个div）</li><li>script      逻辑js</li><li>style       样式   css less scss</li></ul><blockquote><p>style用于提供组件的样式，默认只能用css</p><p>可以通过style标签， <code>lang=&quot;less&quot;</code>开启less的功能，需要安装依赖包</p><p><code>npm install less-loader@7.2.1 less --save-dev</code></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我的第一篇文章</title>
      <link href="/2023/05/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/05/24/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>学习强国</title>
      <link href="/xxqg/index.html"/>
      <url>/xxqg/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
